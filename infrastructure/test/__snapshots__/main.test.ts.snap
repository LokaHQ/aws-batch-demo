// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot matches previous state 1`] = `
{
  "Outputs": {
    "JobDefinitonArn": {
      "Value": {
        "Ref": "JobDefnA747EE6E",
      },
    },
    "JobQueueArn": {
      "Value": {
        "Fn::GetAtt": [
          "JobQueueEE3AD499",
          "JobQueueArn",
        ],
      },
    },
    "ServiceLoadBalancerDNSEC5B149E": {
      "Value": {
        "Fn::GetAtt": [
          "ServiceLBE9A1ADBC",
          "DNSName",
        ],
      },
    },
    "ServiceServiceURL250C0FB6": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "ServiceLBE9A1ADBC",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
    "WebAppUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "ServiceLBE9A1ADBC",
                "DNSName",
              ],
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "EcsDefaultClusterMnL3mNNYNvpcFC68BC3A": {
      "Type": "AWS::ECS::Cluster",
    },
    "JobDefnA747EE6E": {
      "Properties": {
        "ContainerProperties": {
          "Command": [
            "/app/bin/demoapp-compute",
            "--name",
            "Ref::inputdata",
          ],
          "Environment": [],
          "ExecutionRoleArn": {
            "Fn::GetAtt": [
              "containerDefnExecutionRole71EA56DB",
              "Arn",
            ],
          },
          "FargatePlatformConfiguration": {},
          "Image": "dummy",
          "NetworkConfiguration": {
            "AssignPublicIp": "DISABLED",
          },
          "ReadonlyRootFilesystem": false,
          "ResourceRequirements": [
            {
              "Type": "MEMORY",
              "Value": "512",
            },
            {
              "Type": "VCPU",
              "Value": "256",
            },
          ],
        },
        "JobDefinitionName": "batch-demo",
        "PlatformCapabilities": [
          "FARGATE",
        ],
        "RetryStrategy": {
          "Attempts": 5,
          "EvaluateOnExit": [
            {
              "Action": "EXIT",
              "OnReason": "CannotPullContainerError:*",
            },
          ],
        },
        "Timeout": {},
        "Type": "container",
      },
      "Type": "AWS::Batch::JobDefinition",
    },
    "JobQueueEE3AD499": {
      "Properties": {
        "ComputeEnvironmentOrder": [
          {
            "ComputeEnvironment": {
              "Fn::GetAtt": [
                "myFargateComputeEnv4C0A2B80",
                "ComputeEnvironmentArn",
              ],
            },
            "Order": 100,
          },
        ],
        "JobQueueName": "batch-demo",
        "Priority": 1,
        "State": "ENABLED",
      },
      "Type": "AWS::Batch::JobQueue",
    },
    "Service9571FDD8": {
      "DependsOn": [
        "ServiceLBPublicListenerECSGroup0CC8688C",
        "ServiceLBPublicListener46709EAA",
        "ServiceTaskDefTaskRoleDefaultPolicy9CCB4F8E",
        "ServiceTaskDefTaskRole0CFE2F57",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "EcsDefaultClusterMnL3mNNYNvpcFC68BC3A",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 7070,
            "TargetGroupArn": {
              "Ref": "ServiceLBPublicListenerECSGroup0CC8688C",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "ServiceSecurityGroupEEA09B68",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "vpcingressSubnet1Subnet4E016228",
              },
              {
                "Ref": "vpcingressSubnet2SubnetEC320D03",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "ServiceTaskDef1922A00F",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceLBE9A1ADBC": {
      "DependsOn": [
        "vpcingressSubnet1DefaultRoute69B9019B",
        "vpcingressSubnet1RouteTableAssociationBA5D4A44",
        "vpcingressSubnet2DefaultRoute9BA4F3D4",
        "vpcingressSubnet2RouteTableAssociationBD7DE3FC",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ServiceLBSecurityGroupF7435A5C",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "vpcingressSubnet1Subnet4E016228",
          },
          {
            "Ref": "vpcingressSubnet2SubnetEC320D03",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "ServiceLBPublicListener46709EAA": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ServiceLBPublicListenerECSGroup0CC8688C",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "ServiceLBE9A1ADBC",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ServiceLBPublicListenerECSGroup0CC8688C": {
      "Properties": {
        "HealthCheckPath": "/healthcheck",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ServiceLBSecurityGroupF7435A5C": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB MyTestStackServiceLB3B267320",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceLBSecurityGrouptoMyTestStackServiceSecurityGroup98109A0E7070C118F88E": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ServiceSecurityGroupEEA09B68",
            "GroupId",
          ],
        },
        "FromPort": 7070,
        "GroupId": {
          "Fn::GetAtt": [
            "ServiceLBSecurityGroupF7435A5C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 7070,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ServiceSecurityGroupEEA09B68": {
      "DependsOn": [
        "ServiceTaskDefTaskRoleDefaultPolicy9CCB4F8E",
        "ServiceTaskDefTaskRole0CFE2F57",
      ],
      "Properties": {
        "GroupDescription": "MyTestStack/Service/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceSecurityGroupfromMyTestStackServiceLBSecurityGroup4E5826B3707031DBF6AF": {
      "DependsOn": [
        "ServiceTaskDefTaskRoleDefaultPolicy9CCB4F8E",
        "ServiceTaskDefTaskRole0CFE2F57",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 7070,
        "GroupId": {
          "Fn::GetAtt": [
            "ServiceSecurityGroupEEA09B68",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ServiceLBSecurityGroupF7435A5C",
            "GroupId",
          ],
        },
        "ToPort": 7070,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ServiceTaskDef1922A00F": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "HTTP_PORT",
                "Value": "7070",
              },
              {
                "Name": "JOB_DEFINITION",
                "Value": {
                  "Ref": "JobDefnA747EE6E",
                },
              },
              {
                "Name": "JOB_QUEUE",
                "Value": {
                  "Fn::GetAtt": [
                    "JobQueueEE3AD499",
                    "JobQueueArn",
                  ],
                },
              },
              {
                "Name": "SECRET_KEY",
                "Value": "0736e5b9-a884-4252-911c-6f9d73513a21",
              },
            ],
            "Essential": true,
            "Image": "dummy",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "ServiceTaskDefwebLogGroup2A898F61",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "Service",
              },
            },
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 7070,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "ServiceTaskDefExecutionRole919F7BE3",
            "Arn",
          ],
        },
        "Family": "MyTestStackServiceTaskDef45089EBD",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "ServiceTaskDefTaskRole0CFE2F57",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "ServiceTaskDefExecutionRole919F7BE3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ServiceTaskDefExecutionRoleDefaultPolicy3073559D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ServiceTaskDefwebLogGroup2A898F61",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServiceTaskDefExecutionRoleDefaultPolicy3073559D",
        "Roles": [
          {
            "Ref": "ServiceTaskDefExecutionRole919F7BE3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServiceTaskDefTaskRole0CFE2F57": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ServiceTaskDefTaskRoleDefaultPolicy9CCB4F8E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "batch:ListJobs",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "batch:SubmitJob",
              "Effect": "Allow",
              "Resource": [
                {
                  "Ref": "JobDefnA747EE6E",
                },
                {
                  "Fn::GetAtt": [
                    "JobQueueEE3AD499",
                    "JobQueueArn",
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServiceTaskDefTaskRoleDefaultPolicy9CCB4F8E",
        "Roles": [
          {
            "Ref": "ServiceTaskDefTaskRole0CFE2F57",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServiceTaskDefwebLogGroup2A898F61": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "containerDefnExecutionRole71EA56DB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "containerDefnExecutionRoleDefaultPolicy75C4C947": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/batch/job:*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "containerDefnExecutionRoleDefaultPolicy75C4C947",
        "Roles": [
          {
            "Ref": "containerDefnExecutionRole71EA56DB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "myFargateComputeEnv4C0A2B80": {
      "Properties": {
        "ComputeEnvironmentName": "batch-demo",
        "ComputeResources": {
          "MaxvCpus": 256,
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "myFargateComputeEnvSecurityGroup669230C7",
                "GroupId",
              ],
            },
          ],
          "Subnets": [
            {
              "Ref": "vpcrdsSubnet1Subnet81509054",
            },
            {
              "Ref": "vpcrdsSubnet2SubnetCEFF1A53",
            },
          ],
          "Type": "FARGATE",
          "UpdateToLatestImageVersion": true,
        },
        "ReplaceComputeEnvironment": false,
        "State": "ENABLED",
        "Type": "managed",
        "UpdatePolicy": {},
      },
      "Type": "AWS::Batch::ComputeEnvironment",
    },
    "myFargateComputeEnvSecurityGroup669230C7": {
      "Properties": {
        "GroupDescription": "MyTestStack/myFargateComputeEnv/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "vpcA2121C38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "vpcIGWE57CBDCA": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "vpcVPCGW7984C166": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "vpcIGWE57CBDCA",
        },
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "vpcingressSubnet1DefaultRoute69B9019B": {
      "DependsOn": [
        "vpcVPCGW7984C166",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "vpcIGWE57CBDCA",
        },
        "RouteTableId": {
          "Ref": "vpcingressSubnet1RouteTable1A2E6413",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "vpcingressSubnet1RouteTable1A2E6413": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/vpc/ingressSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "vpcingressSubnet1RouteTableAssociationBA5D4A44": {
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcingressSubnet1RouteTable1A2E6413",
        },
        "SubnetId": {
          "Ref": "vpcingressSubnet1Subnet4E016228",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "vpcingressSubnet1Subnet4E016228": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/vpc/ingressSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "vpcingressSubnet2DefaultRoute9BA4F3D4": {
      "DependsOn": [
        "vpcVPCGW7984C166",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "vpcIGWE57CBDCA",
        },
        "RouteTableId": {
          "Ref": "vpcingressSubnet2RouteTable4047C3AC",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "vpcingressSubnet2RouteTable4047C3AC": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/vpc/ingressSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "vpcingressSubnet2RouteTableAssociationBD7DE3FC": {
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcingressSubnet2RouteTable4047C3AC",
        },
        "SubnetId": {
          "Ref": "vpcingressSubnet2SubnetEC320D03",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "vpcingressSubnet2SubnetEC320D03": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/vpc/ingressSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "vpcrdsSubnet1RouteTableAssociation3E946461": {
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcrdsSubnet1RouteTableFFE08759",
        },
        "SubnetId": {
          "Ref": "vpcrdsSubnet1Subnet81509054",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "vpcrdsSubnet1RouteTableFFE08759": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/vpc/rdsSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "vpcrdsSubnet1Subnet81509054": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "rds",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/vpc/rdsSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "vpcrdsSubnet2RouteTable780314E2": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/vpc/rdsSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "vpcrdsSubnet2RouteTableAssociationA8E58271": {
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcrdsSubnet2RouteTable780314E2",
        },
        "SubnetId": {
          "Ref": "vpcrdsSubnet2SubnetCEFF1A53",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "vpcrdsSubnet2SubnetCEFF1A53": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "rds",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/vpc/rdsSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
